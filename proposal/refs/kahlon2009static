This paper proposes a static data race detector for concurrent C programs that is fast and precise. For a multi-threaded program with asynchronous calls, it first builds a precise context-sensitive concurrent control flow graph (CCFG) based on a flow and context-sensitive (FSCS) points-to analysis. Using this CCFG, they perform a staged data race detection, that involves identifying the shared variables and lock pointers, computing an initial database of race warnings, and finally, pruning away the spurious warnings using a may-happen-in-parallel (MHP) analysis based on computing lock sets and performing thread order analysis.